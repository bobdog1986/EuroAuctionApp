<UserControl
    x:Class="EuroAuctionApp.CoreViews.Views.FileOperationView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:local="clr-namespace:EuroAuctionApp.CoreViews.Views"
    xmlns:localConverters="clr-namespace:EuroAuctionApp.CoreViews.Converters"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:prism="http://www.codeplex.com/prism"
    d:DesignHeight="900"
    d:DesignWidth="1600"
    lex:LocalizeDictionary.DesignCulture="zh-CN"
    lex:ResxLocalizationProvider.DefaultAssembly="EuroAuctionApp.CoreViews"
    lex:ResxLocalizationProvider.DefaultDictionary="Resources"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="d">
    <UserControl.Resources>
        <localConverters:DoubleToKConverter x:Key="DoubleDataConverter" />
        <localConverters:InverseBoolConverter x:Key="InverseBoolConverter" />
        <localConverters:ProfitToColorConverter x:Key="ProfitToColorConverter" />
        <Style
            x:Key="NormalColumnHeader"
            BasedOn="{StaticResource MetroDataGridColumnHeader}"
            TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="metro:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        </Style>
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right" />
            <!--  Setter Property="Foreground" Value="{Binding DataContext, Converter={StaticResource ProfitToColorConverter}}"/  -->
            <!--  Setter Property="Background" Value="{Binding DataContext, Converter={StaticResource ProfitToColorConverter}}"/  -->
        </Style>

    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <DataGrid
            Grid.Column="0"
            MinWidth="950"
            MaxWidth="1000"
            Margin="{StaticResource MarginAll}"
            HorizontalAlignment="Left"
            AutoGenerateColumns="False"
            ColumnHeaderStyle="{StaticResource NormalColumnHeader}"
            HeadersVisibility="All"
            ItemsSource="{Binding FilterAuctionDataCollection}"
            SelectionUnit="Cell">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Symbol}" Header="Symbol" />
                <DataGridTextColumn Binding="{Binding Market}" Header="{lex:Loc Market}" />
                <DataGridTextColumn Binding="{Binding TotalVolumeAtAuction, Converter={StaticResource DoubleDataConverter}}" Header="{lex:Loc TotalVolume}" />
                <DataGridTextColumn Binding="{Binding VolumeInAuction, Converter={StaticResource DoubleDataConverter}}" Header="{lex:Loc AuctionVolume}" />
                <DataGridTextColumn Binding="{Binding VolumeInLast5, Converter={StaticResource DoubleDataConverter}}" Header="{lex:Loc Last5Volume}" />
                <DataGridTextColumn Binding="{Binding AuctionVolumePercent, StringFormat={}{0}%}" Header="{lex:Loc AuctionVolumePercent}" />
                <DataGridTextColumn Binding="{Binding Last5VolumePercent, StringFormat={}{0}%}" Header="{lex:Loc Last5VolumePercent}" />
                <DataGridTextColumn Binding="{Binding Last5Price}" Header="{lex:Loc Last5Price}" />
                <DataGridTextColumn Binding="{Binding ClosePrice}" Header="{lex:Loc ClosePrice}" />
                <DataGridTextColumn Binding="{Binding AuctionPrice}" Header="{lex:Loc AuctionPrice}" />
                <DataGridTextColumn Binding="{Binding Last5ProfitInPercent, StringFormat={}{0}%}" Header="{lex:Loc Last5ProfitInPercent}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding Last5ProfitInPercent, Converter={StaticResource ProfitToColorConverter}}" />
                            <Setter Property="MinWidth" Value="60" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding CloseProfitInPercent, StringFormat={}{0}%}" Header="{lex:Loc CloseProfitInPercent}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding CloseProfitInPercent, Converter={StaticResource ProfitToColorConverter}}" />
                            <Setter Property="MinWidth" Value="60" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Binding="{Binding AvgProfitInPercent, StringFormat={}{0}%}" Header="{lex:Loc AvgProfitInPercent}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Background" Value="{Binding AvgProfitInPercent, Converter={StaticResource ProfitToColorConverter}}" />
                            <Setter Property="MinWidth" Value="60" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" MinWidth="130" />
                </Grid.ColumnDefinitions>
                <DataGrid
                    Grid.Column="0"
                    Height="500"
                    MinWidth="450"
                    MaxWidth="500"
                    Margin="{StaticResource MarginAll}"
                    HorizontalAlignment="Left"
                    AutoGenerateColumns="False"
                    ColumnHeaderStyle="{StaticResource NormalColumnHeader}"
                    ItemsSource="{Binding QuoteFileCollection}"
                    SelectionUnit="Cell">
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="40"
                            Binding="{Binding ShortName}"
                            Header="FileName" />
                        <DataGridTextColumn
                            MinWidth="140"
                            Binding="{Binding DateTime}"
                            Header="DateTime" />
                        <DataGridTextColumn Binding="{Binding FirstSymbol}" Header="Symbol" />
                        <DataGridTextColumn Binding="{Binding FirstMarket}" Header="{lex:Loc Market}" />
                        <DataGridCheckBoxColumn Binding="{Binding Is25File}" Header="Is25" />
                        <DataGridCheckBoxColumn Binding="{Binding IsCloseFile}" Header="Is30" />
                        <DataGridCheckBoxColumn Binding="{Binding IsAuctionFile}" Header="Is35" />
                    </DataGrid.Columns>
                </DataGrid>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Button
                        Grid.Row="0"
                        Margin="{StaticResource MarginControl}"
                        Command="{Binding AddQuoteFolderCommand}"
                        Content="{lex:Loc AddQuoteFolder}" />
                    <Button
                        Grid.Row="1"
                        Margin="{StaticResource MarginControl}"
                        Command="{Binding IdentifyQuotesCommand}"
                        Content="{lex:Loc IdentifyQuotes}" />
                    <Button
                        Grid.Row="2"
                        Margin="{StaticResource MarginControl}"
                        Command="{Binding CalculateQuoteCommand}"
                        Content="{lex:Loc CalculateQuote}" />
                    <DatePicker
                        Grid.Row="3"
                        MinWidth="120"
                        Margin="{StaticResource MarginControl}"
                        HorizontalAlignment="Center"
                        metro:TextBoxHelper.Watermark="Select a date"
                        SelectedDate="{Binding QuoteDatePickerDate, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />
                    <Button
                        Grid.Row="4"
                        Margin="{StaticResource MarginControl}"
                        Command="{Binding BackupQuotesCommand}"
                        Content="{lex:Loc BackupQuotes}" />
                    <TextBlock Grid.Row="6" />
                    <Button
                        Grid.Row="7"
                        Margin="{StaticResource MarginControl}"
                        Command="{Binding ExploreQuoteFolderCommand}"
                        Content="{lex:Loc ExploreQuoteFolder}" />
                    <Button
                        Grid.Row="8"
                        Margin="{StaticResource MarginControl}"
                        Command="{Binding AddQuoteFileCommand}"
                        Content="{lex:Loc AddQuoteFile}" />
                    <Button
                        Grid.Row="9"
                        Margin="{StaticResource MarginControl}"
                        Background="{DynamicResource ValidationBrush5}"
                        Command="{Binding CleanQuotesCommand}"
                        Content="{lex:Loc CleanQuotes}" />

                </Grid>
            </Grid>
            <Grid Grid.Row="1" Grid.Column="0">
                <StackPanel
                    Grid.Row="2"
                    Grid.Column="0"
                    Margin="{StaticResource MarginAll}"
                    HorizontalAlignment="Left">
                    <CheckBox
                        Margin="{StaticResource MarginAll}"
                        Command="{Binding SelectMarketCommand}"
                        Content="select single Market"
                        IsChecked="{Binding IsEnableFilter}" />
                    <ListBox
                        MinWidth="100"
                        MinHeight="200"
                        Margin="{StaticResource MarginAll}"
                        VerticalAlignment="Top"
                        BorderBrush="{DynamicResource AccentColorBrush}"
                        BorderThickness="1"
                        IsEnabled="{Binding IsEnableFilter}"
                        ItemsSource="{Binding MarketCollection}"
                        SelectedItem="{Binding SelectedMarket}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding SelectMarketCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListBox>
                </StackPanel>
            </Grid>
            <Grid
                Grid.Row="1"
                Grid.Column="1"
                MinWidth="100"
                MaxWidth="150"
                Margin="{StaticResource MarginAll}"
                HorizontalAlignment="Left">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" />
                <DatePicker
                    Grid.Row="1"
                    MinWidth="100"
                    Margin="{StaticResource MarginControl}"
                    HorizontalAlignment="Center"
                    metro:TextBoxHelper.Watermark="Select a date"
                    SelectedDate="{Binding AuctionDatePickerDate, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True}" />
                <Button
                    Grid.Row="2"
                    Margin="{StaticResource MarginControl}"
                    Command="{Binding BackupAuctionFileCommand}"
                    Content="{lex:Loc BackupAuctionFile}" />
                <Button
                    Grid.Row="3"
                    Margin="{StaticResource MarginControl}"
                    Command="{Binding WriteToDbCommand}"
                    Content="{lex:Loc WriteToDb}" />
                <TextBlock Grid.Row="4" />
                <Button
                    Grid.Row="5"
                    Margin="{StaticResource MarginControl}"
                    Background="{DynamicResource ValidationBrush5}"
                    Command="{Binding CleanAuctionCommand}"
                    Content="{lex:Loc CleanAuction}" />
                <TextBlock Grid.Row="6" />
                <Button
                    Grid.Row="7"
                    Margin="{StaticResource MarginControl}"
                    Command="{Binding OpenAuctionFileCommand}"
                    Content="{lex:Loc OpenAuctionFile}" />
                <Button
                    Grid.Row="8"
                    Margin="{StaticResource MarginControl}"
                    Command="{Binding ExportAuctionFileCommand}"
                    Content="{lex:Loc ExportAuctionFile}" />
                <Button
                    Grid.Row="9"
                    Margin="{StaticResource MarginControl}"
                    Command="{Binding ExploreAuctionFolderCommand}"
                    Content="{lex:Loc ExploreAuctionFolder}" />

            </Grid>
            <StackPanel Grid.Row="1" Grid.Column="2">
                <TextBlock
                    MinHeight="30"
                    Margin="{StaticResource MarginAll}"
                    Text="{lex:Loc CurrentBackupPath}" />

                <TextBlock
                    MinHeight="30"
                    MaxWidth="180"
                    Margin="{StaticResource MarginAll}"
                    Text="{Binding SelectedBackupPath}"
                    TextWrapping="Wrap" />

                <Button
                    Grid.Row="1"
                    MinWidth="120"
                    MaxWidth="180"
                    Margin="{StaticResource MarginAll}"
                    Command="{Binding SelectBackupPathCommand}"
                    Content="{lex:Loc SelectBackupPath}" />
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
